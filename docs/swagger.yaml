basePath: /api/v1
definitions:
  requests.RequestLogin:
    properties:
      email:
        example: john.smith@example.com
        type: string
      password:
        example: P@ssw0rd123
        type: string
    type: object
  requests.RequestLoginByUsername:
    properties:
      password:
        example: P@ssw0rd123
        type: string
      username:
        example: johnsmith
        type: string
    type: object
  requests.RequestRegister:
    properties:
      email:
        example: john.smith@example.com
        type: string
      password:
        example: P@ssw0rd123
        type: string
      username:
        example: johnsmith
        type: string
    type: object
  requests.RequestUpdateUser:
    properties:
      address:
        example: 123 Main Street, Apt 4B
        type: string
      age:
        example: 28
        type: integer
      birthday:
        example: "1995-06-15T00:00:00Z"
        type: string
      city:
        example: San Francisco
        type: string
      country:
        example: USA
        type: string
      first_name:
        example: John
        type: string
      gender:
        example: male
        type: string
      last_name:
        example: Smith
        type: string
      state:
        example: CA
        type: string
      username:
        example: johnsmith
        type: string
    type: object
  responses.Data:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  responses.Error:
    properties:
      code:
        type: integer
      error:
        type: string
    type: object
  responses.ResponseStorage:
    properties:
      url:
        example: https://example.com/123.jpg
        type: string
    type: object
  responses.ResponseUser:
    properties:
      address:
        type: string
      age:
        type: integer
      birthday:
        type: string
      city:
        type: string
      country:
        type: string
      created_at:
        type: string
      email:
        type: string
      first_name:
        type: string
      gender:
        type: string
      id:
        type: integer
      last_name:
        type: string
      state:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: RESTful API endpoints for Photo Sharing Application
  title: Photo Sharing API
  version: "1.0"
paths:
  /health:
    get:
      consumes:
      - application/json
      description: Health check
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.Data'
      summary: Health check
      tags:
      - Health
  /storage:
    post:
      consumes:
      - multipart/form-data
      description: Upload image to Supabase Storage
      parameters:
      - description: Image file to upload
        in: formData
        name: image
        required: true
        type: file
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseStorage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Upload image to Supabase Storage
      tags:
      - Storage
  /users/login:
    post:
      consumes:
      - application/json
      description: Login user
      parameters:
      - description: User login data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RequestLogin'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Login user
      tags:
      - Users
  /users/login-by-username:
    post:
      consumes:
      - application/json
      description: Login user by username
      parameters:
      - description: User login data by username
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RequestLoginByUsername'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Login user by username
      tags:
      - Users
  /users/register:
    post:
      consumes:
      - application/json
      description: Register user
      parameters:
      - description: User registration data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RequestRegister'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Register user
      tags:
      - Users
  /users/update/{id}:
    put:
      consumes:
      - application/json
      description: Update user
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update data
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/requests.RequestUpdateUser'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/responses.ResponseUser'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/responses.Error'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/responses.Error'
      summary: Update user
      tags:
      - Users
swagger: "2.0"
